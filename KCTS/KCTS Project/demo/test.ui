<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1211</width>
    <height>563</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <widget class="QTabWidget" name="tabWidget">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>0</y>
     <width>191</width>
     <height>71</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QTabWidget::pane { /* The tab widget frame */
    border-top: 2px solid #C2C7CB;
}

QTabWidget::tab-bar {
    left: 5px; /* move to the right by 5px */
}

/* Style the tab using the tab sub-control. Note that
    it reads QTabBar _not_ QTabWidget */
QTabBar::tab {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
    border: 2px solid #C4C4C3;
    border-bottom-color: #C2C7CB; /* same as the pane color */
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
    min-width: 8ex;
    padding: 2px;
}

QTabBar::tab:selected, QTabBar::tab:hover {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #fafafa, stop: 0.4 #f4f4f4,
                                stop: 0.5 #e7e7e7, stop: 1.0 #fafafa);
}

QTabBar::tab:selected {
    border-color: #9B9B9B;
    border-bottom-color: #C2C7CB; /* same as pane color */
}

QTabBar::tab:!selected {
    margin-top: 2px; /* make non-selected tabs look smaller */
}</string>
   </property>
   <property name="currentIndex">
    <number>0</number>
   </property>
   <widget class="QWidget" name="tab">
    <attribute name="title">
     <string>实时解析</string>
    </attribute>
   </widget>
   <widget class="QWidget" name="tab_2">
    <attribute name="title">
     <string>历史记录</string>
    </attribute>
   </widget>
  </widget>
  <widget class="QProgressBar" name="progressBar">
   <property name="geometry">
    <rect>
     <x>810</x>
     <y>300</y>
     <width>118</width>
     <height>23</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QProgressBar {
    border: 2px solid #204789;
    border-radius: 5px;
	text-align: center;
}

QProgressBar::chunk {
    background-color: #05B8CC;
    width: 100px;
}</string>
   </property>
   <property name="maximum">
    <number>2499</number>
   </property>
   <property name="value">
    <number>23</number>
   </property>
   <property name="textVisible">
    <bool>true</bool>
   </property>
   <property name="format">
    <string>%v%</string>
   </property>
  </widget>
  <widget class="QLabel" name="label">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>0</y>
     <width>91</width>
     <height>51</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    border: 2px solid green;
    border-radius: 10px;
    padding: 2px;
	background-color: #f3f3f3;
}</string>
   </property>
   <property name="text">
    <string>TextLabel</string>
   </property>
  </widget>
  <widget class="QPushButton" name="pushButton">
   <property name="geometry">
    <rect>
     <x>320</x>
     <y>0</y>
     <width>111</width>
     <height>51</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border: 2px solid #8f8f91;
    border-radius: 6px;
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #f6f7fa, stop: 1 #dadbde);
    min-width: 80px;
	
	font: 9pt &quot;幼圆&quot;;
}

QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {
    border-color: navy; /* make the default button prominent */
}</string>
   </property>
   <property name="text">
    <string>PushButton</string>
   </property>
  </widget>
  <widget class="QTextEdit" name="textEdit">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>60</y>
     <width>431</width>
     <height>281</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">/* radial gradient */
QTextEdit {
    background-color: qlineargradient(x1: 1, y1: 0, x2: 0, y2: 0,
                                      stop: 0 #404959, stop: 1 #f0f0f0);
}</string>
   </property>
  </widget>
  <widget class="QPushButton" name="pushButton_2">
   <property name="geometry">
    <rect>
     <x>440</x>
     <y>30</y>
     <width>93</width>
     <height>28</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #3b78e6, stop:1 #0f5fd7);
    border-radius: 5px;
    color: white;
    font-weight: bold;
    padding: 5px 15px;
}

QPushButton:hover {
    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #60a3f7, stop:1 #3b78e6);
}

QPushButton:pressed {
    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #0f5fd7, stop:1 #3b78e6);
}
</string>
   </property>
   <property name="text">
    <string>PushButton</string>
   </property>
  </widget>
  <widget class="QLineEdit" name="lineEdit">
   <property name="geometry">
    <rect>
     <x>590</x>
     <y>0</y>
     <width>113</width>
     <height>21</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QLineEdit {
	background: transparent;
	border-width: 1;
	border-style: outset;
}</string>
   </property>
  </widget>
  <widget class="QComboBox" name="comboBox">
   <property name="geometry">
    <rect>
     <x>1000</x>
     <y>20</y>
     <width>131</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QComboBox {
    border: 1px solid gray;
    border-radius: 3px;
    padding: 1px 18px 1px 3px;
    min-width: 6em;
}

QComboBox:editable {
    background: white;
}

QComboBox:!editable, QComboBox::drop-down:editable {
     background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                 stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
}

/* QComboBox gets the &quot;on&quot; state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #D3D3D3, stop: 0.4 #D8D8D8,
                                stop: 0.5 #DDDDDD, stop: 1.0 #E1E1E1);
}

QComboBox:on { /* shift the text when the popup opens */
    padding-top: 3px;
    padding-left: 4px;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 15px;

    border-left-width: 1px;
    border-left-color: darkgray;
    border-left-style: solid; /* just a single line */
    border-top-right-radius: 3px; /* same radius as the QComboBox */
    border-bottom-right-radius: 3px;
}

QComboBox::down-arrow {
    image: url(/usr/share/icons/crystalsvg/16x16/actions/1downarrow.png);
}

QComboBox::down-arrow:on { /* shift the arrow when popup is open */
    top: 1px;
    left: 1px;
}</string>
   </property>
   <property name="editable">
    <bool>false</bool>
   </property>
   <item>
    <property name="text">
     <string>1</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>2</string>
    </property>
   </item>
  </widget>
  <widget class="QComboBox" name="comboBox_2">
   <property name="geometry">
    <rect>
     <x>820</x>
     <y>80</y>
     <width>102</width>
     <height>22</height>
    </rect>
   </property>
   <property name="contextMenuPolicy">
    <enum>Qt::DefaultContextMenu</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 设置滚动条整体样式 */
QComboBox QScrollBar:vertical {
    border: 1px solid #dcdcdc; /* 滚动条边框颜色 */
    background: #f5f5f5;       /* 滚动条背景颜色 */
    width: 12px;               /* 滚动条宽度 */
}

/* 设置滚动条滑块样式 */
QComboBox QScrollBar::handle:vertical {
    background: #cccccc;       /* 滑块颜色 */
    border-radius: 6px;        /* 滑块圆角 */
    min-height: 20px;          /* 滑块最小高度 */
}

/* 设置滑块在鼠标悬停时的样式 */
QComboBox QScrollBar::handle:vertical:hover {
    background: #aaaaaa;       /* 滑块悬停颜色 */
}

/* 设置滚动条上箭头和下箭头按钮样式 */
QComboBox QScrollBar::sub-line,
QComboBox QScrollBar::add-line {
    border: 1px solid #dcdcdc; /* 按钮边框颜色 */
    background: #f5f5f5;       /* 按钮背景颜色 */
    height: 12px;              /* 按钮高度 */
    subcontrol-origin: margin; /* 按钮对齐方式 */
}



/* 设置滚动条轨道样式 */
QComboBox QScrollBar::add-page,
QComboBox QScrollBar::sub-page {
    background: #eaeaea; /* 滚动条轨道颜色 */
}
</string>
   </property>
   <property name="maxVisibleItems">
    <number>5</number>
   </property>
   <item>
    <property name="text">
     <string>1</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>新建项目</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>新建项目</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>新建项目</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>新建项目</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>1</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>1</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>1</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>1</string>
    </property>
   </item>
   <item>
    <property name="text">
     <string>1</string>
    </property>
   </item>
  </widget>
  <widget class="QTableWidget" name="tableWidget">
   <property name="geometry">
    <rect>
     <x>40</x>
     <y>350</y>
     <width>511</width>
     <height>181</height>
    </rect>
   </property>
   <property name="minimumSize">
    <size>
     <width>0</width>
     <height>0</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">/*    QHeaderView::section {
            background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #f6f7fa, stop: 1 #dadbde);
    }
QTableWidget::item {
            background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #408a99, stop: 1 #dadbde);
    }
*/
/* 水平表头默认样式 */
QTableWidget QHeaderView::section:horizontal {
    background-color: orange; /* 背景颜色 */
    color: white; /* 字体颜色 */
    font: bold 10pt &quot;微软雅黑&quot;;
    border: 1px solid white; /* 默认边框 */
    padding: 4px;
}

/* 水平表头 checked 状态 */
QTableWidget QHeaderView::section:horizontal:checked {
    background-color: green; /* 选中时的背景颜色 */
    color: yellow; /* 选中时的字体颜色 */
    border-bottom: 2px solid red; /* 选中时底部边框 2px red */
}

/* 水平表头 pressed 状态 */
QTableWidget QHeaderView::section:horizontal:pressed {
    background-color: yellow; /* 按下时的背景颜色 */
    color: orange; /* 按下时的字体颜色 */
    border-bottom: 2px solid blue; /* 按下时底部边框 2px blue */
}

/* 同时处于 checked 和 pressed 状态 */
QTableWidget QHeaderView::section:horizontal:checked:pressed {
    background-color: red; /* 选中且按下时的背景颜色 */
    color: cyan; /* 选中且按下时的字体颜色 */
    border-bottom: 2px solid purple; /* 选中且按下时底部边框 2px purple */
}



 </string>
   </property>
   <property name="verticalScrollBarPolicy">
    <enum>Qt::ScrollBarAlwaysOff</enum>
   </property>
   <property name="horizontalScrollBarPolicy">
    <enum>Qt::ScrollBarAlwaysOff</enum>
   </property>
   <property name="autoScrollMargin">
    <number>16</number>
   </property>
   <property name="editTriggers">
    <set>QAbstractItemView::NoEditTriggers</set>
   </property>
   <property name="showGrid">
    <bool>true</bool>
   </property>
   <property name="gridStyle">
    <enum>Qt::SolidLine</enum>
   </property>
   <property name="sortingEnabled">
    <bool>false</bool>
   </property>
   <property name="wordWrap">
    <bool>true</bool>
   </property>
   <property name="cornerButtonEnabled">
    <bool>true</bool>
   </property>
   <property name="rowCount">
    <number>2</number>
   </property>
   <property name="columnCount">
    <number>8</number>
   </property>
   <attribute name="horizontalHeaderDefaultSectionSize">
    <number>50</number>
   </attribute>
   <attribute name="verticalHeaderVisible">
    <bool>true</bool>
   </attribute>
   <attribute name="verticalHeaderMinimumSectionSize">
    <number>40</number>
   </attribute>
   <attribute name="verticalHeaderDefaultSectionSize">
    <number>60</number>
   </attribute>
   <row>
    <property name="text">
     <string>OU ANAL</string>
    </property>
   </row>
   <row/>
   <column>
    <property name="text">
     <string>bit7</string>
    </property>
   </column>
   <column>
    <property name="text">
     <string>bit6</string>
    </property>
   </column>
   <column>
    <property name="text">
     <string>bit5</string>
    </property>
   </column>
   <column>
    <property name="text">
     <string>bit4</string>
    </property>
   </column>
   <column>
    <property name="text">
     <string>bit3</string>
    </property>
   </column>
   <column>
    <property name="text">
     <string>bit2</string>
    </property>
   </column>
   <column>
    <property name="text">
     <string>bit1</string>
    </property>
   </column>
   <column>
    <property name="text">
     <string>bit0</string>
    </property>
   </column>
  </widget>
  <widget class="QTableWidget" name="tableWidget_2">
   <property name="geometry">
    <rect>
     <x>450</x>
     <y>60</y>
     <width>311</width>
     <height>111</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">/*表头背景颜色*/
QHeaderView::section {
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
								stop: 0 #f6f7fa, stop: 1 #dadbde);
}

/*单元格背景颜色*/
QTableWidget::item {
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #408a99, stop: 1 #dadbde);
}
/*选中单元格的背景颜色*/
QTableWidget::item:selected {
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #408a99, stop: 1 #20505e);
}
/*设置字体*/
QTableWidget::item {
	font-size: 12pt;
	font-family: &quot;微软雅黑&quot;;
}</string>
   </property>
   <row>
    <property name="text">
     <string>新建行</string>
    </property>
   </row>
   <row>
    <property name="text">
     <string>新建行</string>
    </property>
   </row>
   <column>
    <property name="text">
     <string>新建列</string>
    </property>
   </column>
   <column>
    <property name="text">
     <string>新建列</string>
    </property>
   </column>
  </widget>
  <widget class="QProgressBar" name="progressBar_2">
   <property name="geometry">
    <rect>
     <x>740</x>
     <y>20</y>
     <width>118</width>
     <height>23</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QProgressBar {
    border: 3px solid grey;
    border-radius: 10px;
	text-align: center;
	border-color: #44909f;
	font: 9pt &quot;微软雅黑&quot;;
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #f6f7fa, stop: 1 #dadbde);
}

QProgressBar::chunk {
    background-color: #e77060;
    width: 20px;
}</string>
   </property>
   <property name="value">
    <number>24</number>
   </property>
  </widget>
  <widget class="QCheckBox" name="checkBox">
   <property name="geometry">
    <rect>
     <x>440</x>
     <y>170</y>
     <width>171</width>
     <height>61</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QCheckBox::indicator {
	width: 85px;
	height: 45px;
}

QCheckBox::indicator:unckecked {
	image: url(:/checkBox/img/toggle_switch_unchecked.png);
}


QCheckBox::indicator:checked {
	image: url(:/checkBox/img/toggle_switch_checked.png);
}</string>
   </property>
   <property name="text">
    <string>去重</string>
   </property>
  </widget>
  <widget class="QCheckBox" name="checkBox_3">
   <property name="geometry">
    <rect>
     <x>440</x>
     <y>230</y>
     <width>221</width>
     <height>71</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QCheckBox {
	spacing: 0px;
}

QCheckBox::indicator {
	width: 85px;
	height: 35px;
}

QCheckBox::indicator:unckecked {
	image: url(:/checkBox/img/padlock.png);
}


QCheckBox::indicator:checked {
	image: url(:/checkBox/img/padlock (1).png);
}</string>
   </property>
   <property name="text">
    <string>checkBox</string>
   </property>
  </widget>
  <widget class="QLineEdit" name="lineEdit_2">
   <property name="enabled">
    <bool>true</bool>
   </property>
   <property name="geometry">
    <rect>
     <x>620</x>
     <y>200</y>
     <width>113</width>
     <height>20</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QLineEdit {
        font-size: 16px;          /* 正常状态下的字体大小 */
        color: black;             /* 正常状态下输入文本的颜色 */
        background-color: white;  /* 正常状态下的背景颜色 */
    }
    QLineEdit:disabled {
        color: gray;              /* 禁用状态下的文本颜色 */
        background-color: #f0f0f0; /* 禁用状态下的背景颜色 */
        border: 1px solid #d3d3d3; /* 禁用状态下的边框样式 */
    }</string>
   </property>
  </widget>
  <widget class="QSlider" name="horizontalSlider">
   <property name="geometry">
    <rect>
     <x>460</x>
     <y>330</y>
     <width>160</width>
     <height>22</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QSlider::groove:horizontal {
    background: transparent;
}

QSlider::handle:horizontal {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
    border: 2px solid qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #f6f7fa, stop: 1 #dadbde);
	border-radius: 5px;
    width: 2px;
    margin: -2px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */

}

QSlider::add-page:horizontal {
    background: transparent;
}

QSlider::sub-page:horizontal {
	border: 1px solid #204789;
	border-radius: 5px;
    background: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 1,
                                      stop: 0 #05b8cc, stop: 1 #06dcf4);
}</string>
   </property>
   <property name="sliderPosition">
    <number>0</number>
   </property>
   <property name="tracking">
    <bool>true</bool>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
   <property name="invertedAppearance">
    <bool>false</bool>
   </property>
   <property name="invertedControls">
    <bool>false</bool>
   </property>
   <property name="tickPosition">
    <enum>QSlider::TicksAbove</enum>
   </property>
   <property name="tickInterval">
    <number>0</number>
   </property>
  </widget>
  <widget class="QDial" name="dial">
   <property name="geometry">
    <rect>
     <x>930</x>
     <y>290</y>
     <width>41</width>
     <height>41</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true"/>
   </property>
   <property name="pageStep">
    <number>10</number>
   </property>
   <property name="value">
    <number>0</number>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
   <property name="wrapping">
    <bool>false</bool>
   </property>
   <property name="notchTarget">
    <double>11.000000000000000</double>
   </property>
   <property name="notchesVisible">
    <bool>true</bool>
   </property>
  </widget>
  <widget class="QSlider" name="horizontalSlider_2">
   <property name="geometry">
    <rect>
     <x>460</x>
     <y>300</y>
     <width>160</width>
     <height>20</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">/*滑块的样式*/
QSlider::groove:horizontal {
	border: 1px solid #00B0AE;
	background: #00B0AE;
	height: 2px;
	border-radius: 1px;
	padding-left:0px;
	padding-right:0px;
}
 
/*滑块经过的颜色:前面的颜色*/
QSlider::sub-page:horizontal {
	background: #00B0AE;
	border: 1px solid #00B0AE;
	height: 2px;
	border-radius: 2px;
}
 
QSlider::add-page:horizontal {
background: #EAEAEA;
border: 0px solid #EAEAEA;
height: 2px;
border-radius: 2px;
}
QSlider::handle:horizontal 
{
    background: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5, 
    stop:0.6 #00B0AE,stop:0.98409 rgba(255, 255, 255, 255));
 
    width: 15px;
    margin-top: -6px;
    margin-bottom: -6px;
    border-radius: 5px;
}
 
QSlider::handle:horizontal:hover {
    background: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5, 
    stop:0.6 #00B0AE,stop:0.98409 rgba(255, 255, 255, 255));
 
    width: 15px;
    margin-top: -6px;
    margin-bottom: -6px;
    border-radius: 5px;
}</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
 </widget>
 <resources>
  <include location="resource.qrc"/>
 </resources>
 <connections/>
</ui>
